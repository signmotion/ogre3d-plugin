#pragma once

#include "default.h"


/**
* Информация о биоме.
*/
struct FeatureBiome {
    /**
    * Протяжённость биома, м.
    */
    size_t length;

    /**
    * Глубина биома от наблюдателя, м.
    * Соответствует расстоянию до самого дальнего слоя.
    */
    size_t depth;

    /**
    * Cколько слоёв следует нарисовать в биоме.
    */
    size_t countLayer;

    /**
    * Допустимый диапазон высоты / глубины одного слоя биома, м.
    * При формировании слоёв, класс проследит, чтобы слои не превысили
    * допустимую высоту и/или глубину.
    */
    //const boost::numeric::interval< int >  fatLayer;

    /**
    * Высота над "уровнем моря" первого слоя.
    * Расположение по оси OZ след. слоёв вычисляется относительно
    * этой высоты.
    */
    int elevation;

    /**
    * Высота горизонта. К этой высоте стремится последний слой.
    * Может быть меньше '0'.
    */
    int altitude;

    /**
    * Сложность поверхности биома. Может восприниматься слоем по-разному.
    * Например, слой может считать, как высоко *соседние* точки "прыгают"
    * друг от друга - высота "прыжка" задаётся в метрах - как простое
    * смещение координаты по оси OZ.
    * Отличается от аналогичного параметра для Layer тем, что воспринимается
    * биомом для 3D-координат.
    *
    * 0 - все точки лежат на одной линии OX.
    */
    size_t surfaceComplexity;

    /**
    * Количество точек перепада для каждого слоя биома. Задают форму слоёв в
    * 3D-пространстве.
    *
    * @see FeatureLayer::countGradient
    */
    size_t countGradient;

    /**
    * Искажение.
    * Позволяет слоям биома не выглядеть однообразно.
    * Хранится в виде безымяного кортежа, чтобы предоставить
    * биомам / слоям / трендам полную свободу в трактовании
    * значений.
    */
    natural_t  natural;

    /**
    * Зерно генератора случайных чисел для биома.
    */
    int seed;

};
